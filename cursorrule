# 커밋 메시지 규칙 (Conventional Commits)

- type: [feat, fix, docs, style, refactor, test, chore]
- scope: 선택적, 소괄호로 표기 (예: feat(login): ...)
- subject: 50자 이내, 명령형, 첫 글자 소문자, 마침표 금지
- body: 선택적, 한 줄 띄우고 작성, 무엇을/왜 변경했는지
- footer: 선택적, 이슈 트래킹 등
- **커밋은 최대한 작은 작업 단위로 자주 하세요.** (한 커밋에는 하나의 논리적 변경만 포함)

예시:
feat(login): 로그인 기능 추가
fix(server): 서버 오류 수정
docs(readme): 사용법 문서 추가

# 자바스크립트 개발 가이드

## 코드 스타일
- 모든 자바스크립트 코드는 ESLint 규칙을 따라야 합니다.
- 코드 포매팅은 Prettier를 사용해 자동화합니다.
- Google 스타일 가이드를 기본으로 따릅니다.

## 개발 워크플로우
- 코드 작성 후 `npm run lint`로 문법 오류와 스타일을 확인하세요.
- `npm run lint:fix`로 자동 수정 가능한 문제들을 해결하세요.
- `npm run format`으로 코드 포매팅을 적용하세요.
- 커밋 전 반드시 lint와 format을 실행하세요.

## 주요 규칙
- 들여쓰기는 2칸 공백 사용
- 세미콜론 필수
- 작은따옴표 사용
- 한 줄 최대 100자
- camelCase 네이밍 사용 